define({
    //Type your controller code here 
    onNavigate: function() {
        var data = [{
            "APIName": "Gesture API",
            "Description": "A gesture is an action associated with movement of a mouse or a touch screen action. The developers determine how a gesture should be interpreted and the function that must be executed when a gesture is recognized.",
            "CodeSnippet": '<label style="font-weight:bold;color:#f2f1f1;">/*Get Position*/<label><br><label style=color:#f2f1f1>/*<br>@function geoSuccessCallback<br>@description success callback method for the geo location API<br>@param positions- position data from the response of response of geo API<br>@defined in the frmGeoDataController<br>*/</label><br><label style=color:#ffffff>geoSuccessCallback:function(positions){<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function geoFailureCallback<br>@description failure callback method for the geo location API<br>@param result- result data<br>@defined in the frmGeoDataController<br>*/</label><br><label style=color:#ffffff>geoFailureCallback:function(result){<br>//do something<br>}<br></label><label style=color:#f2f1f1>/*<br>@function getPosition<br>@description function to invoke the getPosition method which invokes the geoPosition method.<br>@defined in the frmGeoDataController<br>*/</label><br><label style=color:#ffffff>getPosition:function(){<br>var self=this;<br>kony.application.showLoadingScreen("sknFrmLoading","please wait...",constants.LOADING_SCREEN_POSITION_ONLY_CENTER, false,true,null);<br>geoPosition(self.geoSuccessCallback.bind(this),self.geoFailureCallback.bind(this));<br>}<br></label><label style=color:#f2f1f1>/*<br>@function geoPosition <br>@description-To get the current location of the device <br>@param successCallback - successCallback handler<br>@param failureCallback - failureCallback handler.<br>@defined in the module<br>*/</label><br><label style=color:#ffffff>function geoPosition(successCallback,failureCallback)<br>{<br>var positionoptions={};<br>positionoptions.enableHighAccuracy=true;<br>positionoptions.timeout=10000;<br>positionoptions.maximumAge=1000;<br>try<br>{<br>kony.location.getCurrentPosition(successCallback, failureCallback,positionoptions);<br>}<br>catch(exception)<br>{<br>alert("Exception is ::"+exception.message);<br>}<br>}<br></label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Watch Position*/<label><br><label style=color:#f2f1f1>/*<br>@function geoSuccessCallback<br>@description success callback method for the geo location API<br>@param positions- position data from the response of response of geo API<br>@defined in the frmGeoDataController<br>*/<br>geoSuccessCallback:function(positions){<br>//do something<br>},<br><label style=color:#f2f1f1>/*<br>@function geoFailureCallback<br>@description failure callback method for the geo location API<br>@param result- result data<br>@defined in the frmGeoDataController<br>*/<br>geoFailureCallback:function(result){<br>//do something<br>},<br><label style=color:#f2f1f1>/*<br>@function watchPosition<br>@description function to invoke the watchPosition method defined in the module.<br>@defined in the frmGeoDataController<br>*/</label><br><label style=color:#ffffff>watchPosition:function(){<br>var self=this;<br>kony.application.showLoadingScreen("sknFrmLoading","please wait...",constants.LOADING_SCREEN_POSITION_ONLY_CENTER, false,true,null);<br>this.watchID=watchPosition(self.geoSuccessCallback.bind(this),self.geoFailureCallback.bind(this));<br>}<br></label><label style=color:#f2f1f1>/*<br>@function watchPosition defined in the module to invoke the watchPosition API<br>@description-To get the current location of the device <br>@param successCallback - successCallback handler<br>@param failureCallback - failureCallback handler.<br>@return watchID of the geo change watcher generated in the watch API call.*/</label><br><label style=color:#ffffff>function watchPosition(successCallback,failureCallback)<br>{<br>var positionoptions={};<br>positionoptions.enableHighAccuracy=true;<br>positionoptions.timeout=20000;<br>positionoptions.maximumAge=1000;<br>var watchID=null;<br>try<br>{<br>watchID=kony.location.watchPosition (successCallback,failureCallback, positionoptions);<br>}catch(err)<br>{<br>kony.print(err.message);<br>}<br>return watchID;<br>}<br></label><br><br><label style="font-weight:bold;color:#f2f1f1;">/*Clear Watch*/<label><br><label style=color:#f2f1f1>/*<br>@function clearWatch <br>@description-To remove the watcher for the watch position <br>@defined in the form controller<br>@required watchID,holding the ID of the existing position watcher.<br>*/</label><br><label style=color:#ffffff>clearWatch:function(){<br>if(this.watchID===null)return;<br>try{<br>kony.location.clearWatch(this.watchID);<br>var basicConf={message: "Watch has been stopped.",alertType: constants.<br>ALERT_TYPE_INFO,alertTitle: "clearWatch",yesLabel:"OK",<br>noLabel: "no"};<br>var pspConf={};<br>var infoAlert=kony.ui.Alert(basicConf,pspConf);<br>}catch(excp){<br>kony.print(excp.message);<br>alert(excp.message);<br>}<br>}<br></label>',
            "DocLink": 'Please find below the link for the documentation site:<br><a href = "http://docsdirect.kony.com/6_0/konyonpremises/Subsystems/API_Reference_Guide/content/gestures.htm#onGestureClosure"> Gesture API </a><br>'
        }];
        this.view.KnowledgeFramework.setData(data);
    }
});